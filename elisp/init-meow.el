;;; init-meow.el --- -*- lexical-binding: t -*-

(defun meow-open-below ()
  (interactive)
  (end-of-line)
  (newline-and-indent)
  (meow-insert))

(defun meow-open-above ()
  (interactive)
  (beginning-of-line)
  (newline-and-indent)
  (previous-line)
  (indent-for-tab-command)
  (meow-insert))

(defun meow-forward-char ()
  (interactive)
  (when (< (point) (line-end-position))
    (forward-char (abs (prefix-numeric-value nil)))))

(defun meow-backward-char ()
  (interactive)
  (when (> (point) (line-beginning-position))
    (backward-char (abs (prefix-numeric-value nil)))))



(defun meow-a ()
  (interactive)
  (meow-forward-char)
  (meow-insert))

(defun meow-A ()
  (interactive)
  (end-of-line)
  (meow-insert))

(defun meow-I ()
  (interactive)
  (beginning-of-line)
  (meow-insert))

(defun next-5-line ()
  (interactive)
  (next-line 5))

(defun previous-5-line ()
  (interactive)
  (previous-line 5))

(defun pass ()
  (interactive)
  (message "not define"))


(define-prefix-command 'meow-r-command)
(define-prefix-command 'meow-s-command)

(defun meow-setup ()
  (setq meow-cheatsheet-layout meow-cheatsheet-layout-colemak)
  (meow-motion-overwrite-define-key
   ;; Use e to move up, n to move down.
   ;; Since special modes usually use n to move down, we only overwrite e here.
   
   ;; '("<tab>" . next-buffer)
   ;; '("<backtab>" . previous-buffer)
   '("-" . previous-buffer)
   '("=" . next-buffer)   
   '("e" . next-line)
   '("E" . next-5-line)   
   '("n" . backward-char)
   '("N" . beginning-of-line)   
   '("i" . forward-char)
   '("I" . end-of-line)   
   '("u" . previous-line)
   '("U" . previous-5-line)
   '("Q" . kill-this-buffer)
   '("s" . meow-s-command)
   '("/" . swiper)
   '("si" . split-window-right)
   '("se" . split-window-below)
   '("sk" . ace-delete-window)
   '("sK" . ace-delete-other-windows)
   '("st" . ace-swap-window)
   '("ss" . ace-window))
  
  (meow-leader-define-key
   ;; To execute the originally e in MOTION state, use SPC e.
   
   '("m" . meow-motion-origin-command)
   '("a" . execute-extended-command)
   '("e" . ibuffer)
   '("f" . find-file)
   '("d" . dired)
   '("t" . youdao-dictionary-search-at-point-tooltip)
   '("r" . meow-r-command)
   '("rb" . eval-buffer)
   '("rl" . eval-last-sexp)
        
   '("1" . meow-digit-argument)
   '("2" . meow-digit-argument)
   '("3" . meow-digit-argument)
   '("4" . meow-digit-argument)
   '("5" . meow-digit-argument)
   '("6" . meow-digit-argument)
   '("7" . meow-digit-argument)
   '("8" . meow-digit-argument)
   '("9" . meow-digit-argument)
   '("0" . meow-digit-argument))
  
  (meow-normal-define-key
   '("0" . meow-expand-0)
   '("1" . meow-expand-1)
   '("2" . meow-expand-2)
   '("3" . meow-expand-3)
   '("4" . meow-expand-4)
   '("5" . meow-expand-5)
   '("6" . meow-expand-6)
   '("7" . meow-expand-7)
   '("8" . meow-expand-8)
   '("9" . meow-expand-9)
   ;; '("-" . negative-argument)
   '("-" . previous-buffer)
   '("=" . next-buffer)   
   '(";" . comment-line)
   '(":" . pass)
   '("'" . meow-reverse)
   '("," . meow-inner-of-thing)
   '("." . meow-bounds-of-thing)
   '("[" . meow-beginning-of-thing)
   '("]" . meow-end-of-thing)
   '("<" . indent-rigidly-left-to-tab-stop)
   '(">" . indent-rigidly-right-to-tab-stop)
   '("/" . swiper)
   '("a" . meow-a)
   '("A" . meow-A)
   '("b" . pass)
   '("B" . pass)
   '("c" . meow-change)
   '("C" . meow-change-save)
   '("d" . meow-kill)
   '("D" . meow-kill-whole-line)
   '("e" . next-line)
   '("E" . next-5-line)
   '("M-e" . scroll-up)
   '("f" . meow-search)
   '("F" . pass)
   '("g" . pass)
   '("G" . goto-line)
   '("h" . pass)
   '("H" . pass)
   '("i" . forward-char)
   '("I" . end-of-line)
   '("j" . pass)
   '("J" . pass)
   '("k" . meow-open-below)
   '("K" . meow-open-above)
   '("l" . undo-only)
   '("L" . undo-tree-redo)
   '("m" . meow-mark-word)
   '("M" . meow-mark-symbol)
   '("n" . backward-char)
   '("N" . beginning-of-line)
   '("o" . meow-insert)
   '("O" . meow-I)
   '("p" . yank)
   '("P" . meow-replace)
   '("q" . meow-keyboard-quit)
   '("Q" . kill-this-buffer)
   '("r" . meow-replace)
   ;; '("R" . meow-replace-save)
   '("s" . meow-s-command)
   '("si" . split-window-right)
   '("se" . split-window-below)
   '("sk" . ace-delete-window)
   '("sK" . ace-delete-other-windows)
   '("st" . ace-swap-window)
   '("ss" . ace-window)      
   '("S" . save-buffer)
   '("t" . avy-goto-char)
   '("T" . meow-till-expand)
   '("u" . previous-line)
   '("U" . previous-5-line)
   '("M-u" . scroll-down)
   '("v" . set-mark-command)
   '("V" . meow-line)
   '("w" . meow-next-word)
   '("W" . meow-back-word)
   '("x" . meow-delete)
   '("y" . kill-ring-save)
   '("z" . meow-pop-selection)
   '("Z" . meow-pop-all-selection)
   '("&" . meow-query-replace)
   '("%" . meow-query-replace-regexp)
   '("?" . meow-cheatsheet)
   '("<escape>" . meow-cancel-selection)
   '("RET" . mark-defun)
   ;; '("<f5>" . +change-theme)
   ;; '("<f3>" . meow-start-kmacro)
   ;; '("<f4>" . meow-end-or-call-kmacr)
   '("DEL" . backward-char)))

(use-package meow
  ;; 如果你设置了 `use-package-always-defer'
  ;; :demand nil
  :init
  (meow-global-mode 1)
  :config
  ;; meow-setup 用于自定义按键绑定，可以直接使用下文中的示例
  (meow-setup)
  ;; 如果你需要在 NORMAL 下使用相对行号（基于 display-line-numbers-mode）
  (meow-setup-line-number)
  ;; 如果你需要自动的 mode-line 设置（如果需要自定义见下文对 `meow-indicator' 说明）
  (meow-setup-indicator))

(setq meow-replace-state-name-list
 '((normal . "Ꮚ•N•Ꮚ")
   (insert . "Ꮚ`I´Ꮚ")
   (keypad . "Ꮚ'D'Ꮚ")
   (motion . "Ꮚ-M-Ꮚ")))

(defun open-init-dir()
  (interactive)
  (dired "~/.emacs.d/elisp"))


(defun open-org-dir()
  (interactive)
  (dired "C:/Users/hp/Desktop/文件整合/org"))

(global-set-key (kbd "M-i") 'forward-char)
(global-set-key (kbd "M-I") 'end-of-line)
(global-set-key (kbd "M-n") 'backward-char)
(global-set-key (kbd "M-N") 'beginning-of-line)
(global-set-key (kbd "M-u") 'previous-line)
(global-set-key (kbd "M-U") 'previous-5-line)
(global-set-key (kbd "M-e") 'next-line)
(global-set-key (kbd "M-E") 'next-5-line)
(global-set-key (kbd "M-w") 'forward-word)
(global-set-key (kbd "M-W") 'backward-word)
(global-set-key (kbd "M-q") 'keyboard-quit)
(global-set-key (kbd "M-v") 'set-mark-command)

(global-set-key (kbd "<f2>") 'open-init-dir)
(global-set-key (kbd "<f3>") 'open-org-dir)
(global-set-key (kbd "M-y") 'kill-ring-save) ;; swap M-y and C-y
(global-set-key (kbd "M-P") 'yank-pop)
(global-set-key (kbd "M-p") 'yank) ;; swap M-y and C-y
(global-set-key (kbd "M-l") 'undo-only)
(global-set-key (kbd "M-L") 'undo-tree-redo)

(provide 'init-meow)
